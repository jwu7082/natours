$color-primary: #55c57a; // medium green
$color-primary-light: #7ed56f; // light green
$color-primary-dark: #28b485; // dark green

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

/* --------------------------------------- */
/* BASIC SETUP */
/* --------------------------------------- */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html { // rem refers to root (html) element
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 30px;
    box-sizing: border-box; 
}

/* --------------------------------------- */
/* REUSABLE COMPONENTS */
/* --------------------------------------- */
.btn {
    &:link, &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        border-radius: 10rem;
        display: inline-block;
        transition: all .2s;
        position: relative;
        font-size: 1.6rem;
    }
    
    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }
    
    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black, .2);
        
        &::after { // .btn:hover::after - hover on ::after pseudoelement
            transform: scaleX(1.4) scaleY(1.6);  
            opacity: 0; // without this, transform to pseudoelement will be visible as long as hover is still active 
        }
    }
    
    // Button hover animation
    &::after { // ::after pseudoelement to be transformed (see above)
        content: ""; // required
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        
        position: absolute; // relative to parents
        top: 0;
        left: 0;
        z-index: -1; // below other elements
        
        transition: all .4s;
    }
    
    // Button entrance animation
    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        // animation name, duration, timing function, delay
        animation-fill-mode: backwards;  
        // w3schools.com/cssref/css3_pr_animation-fill-mode.asp
    }
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;
        
        &::after { // .btn--white::after
            background-color: #fff;
        }
    }
}

/* --------------------------------------- */
/* HEADING */
/* --------------------------------------- */
.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.80)), 
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); /* clockwise from top left */
    position: relative;
    
    &__logo-box { // .header__logo-box
        position: absolute;
        top: 4rem; 
        left: 4rem;
    }
    
    &__logo {
        height: 3.5 rem;
    }
    
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    margin-bottom: 6rem;
    backface-visibility: hidden; // for animations
    
    &--main { // .heading-primary--main
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation: moveInLeft 1s ease-out; 
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700px;
        letter-spacing: 1.75rem;
        animation: moveInRight 1s ease-out;
    }
}

/* --------------------------------------- */
/* ANIMATIONS */
/* --------------------------------------- */

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    80% {
        transform: translateX(1rem);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    80% {
        transform: translateX(-1rem);
    }  
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    } 
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}