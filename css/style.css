/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* --------------------------------------- */
/* BASIC SETUP */
/* --------------------------------------- */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}
/* Instead of putting box-sizing: border-box; in *, we force inheritance on all elements. 
https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice */
/* the universal selector overrides anything, including html and body. If we put border-box, we wouldn't be able
to change the box-sizing property of other elements to content-box or some other value. */
/* https://teamtreehouse.com/community/why-using-the-universal-selector-if-we-can-apply-a-css-rule-for-the-whole-document-using-body-or-html */
/* the universal selector * only applies to real elements. *::before and *::after are needed to target all pseudoelements as well */

html {
    /* font-size: 10px; */
    /* bad practice to use px for overall font-size. use % of browser font-size */
    font-size: 62.5%; /* broweser default font-size tends to be 16px. we want 10px */
    /* We use 62.5%, or 10px, because it'll make doing things in terms of rem easier.
    That way, rem units will be similar to px (just divided by 10). 
    If font-size in the root html element were 9px, it would be difficult to convert px to rem. */
    
    /* not in body b/c rem is relative to the root element (html) */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 30px; /* white border */
    box-sizing: border-box;
}

/* --------------------------------------- */
/* REUSABLE COMPONENTS */
/* --------------------------------------- */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    display: inline-block;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
    /* inc dist with blur */
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
    /* closer: decrease shadow blur to 10px and width to 5px */
}

/* Button animation */
.btn::after { /* child of .btn */
    content: ""; /* required */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute; /* relative to parent */
    top: 0;
    left: 0;
    z-index: -1; /* below other elements */
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after { /* hover on ::after pseudoelement */
    /* transform: scale(1.5); */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

/* --------------------------------------- */
/* HEADING */
/* --------------------------------------- */
.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.80)), 
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); /* clockwise from top left */
    position: relative;
}

.logo-box {
    position: absolute;
    top: 4rem; /* 40px */
    left: 4rem;
}

.logo {
    height: 3.5 rem;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    margin-bottom: 6rem;
    
    backface-visibility: hidden;
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    
    /*
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    */
    /* animation-delay: 3s; */
    animation: moveInLeft 1s ease-out; 
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700px;
    letter-spacing: 1.75rem;
    
    animation: moveInRight 1s ease-out;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    /* animation name, duration, timing function, delay */
    animation-fill-mode: backwards; 
    /* https://www.w3schools.com/cssref/css3_pr_animation-fill-mode.asp */
}

/* --------------------------------------- */
/* ANIMATIONS */
/* --------------------------------------- */

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem); /* -100 px */
    }
    80% {
        transform: translateX(1rem);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    80% {
        transform: translateX(-1rem);
    }  
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    } 
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}